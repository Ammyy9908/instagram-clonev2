/* eslint-disable react-hooks/exhaustive-deps */
import Head from "next/head";
import { useRouter } from "next/router";
import React from "react";
import Navbar from "../../components/Navbar/Navbar";
import useAuth from "../../hooks/useAuth";
import styles from "../../styles/Direct.module.css";
import { BsEmojiWink, BsHeart } from "react-icons/bs";
import { HiOutlinePencilAlt } from "react-icons/hi";
import ChatItem from "../../components/ChatItem/ChatItem";
import InfoIcon from "../../components/Icons/InfoIcon";
import getMyChats from "../../utils/getMyChats";
import { FiImage } from "react-icons/fi";
import getCurrentUserData from "../../utils/getUser";
function Direct() {
  const [logout, setLogout] = React.useState(false);
  const [newPost, setNewPost] = React.useState(false);
  const [paddingTop] = React.useState(0);
  const [paddingBottom, setPaddingBottom] = React.useState(0);
  const [chat, setChat] = React.useState(false);
  const [chats, setChats] = React.useState(null);
  const [mounted, setMounted] = React.useState(false);
  const [currentChatUser, setCurrentChatUser] = React.useState(false);
  const [currentChats, setCurrentChats] = React.useState(false);
  const [user_data, setUserData] = React.useState(null);
  const router = useRouter();
  const user = useAuth();

  const handleScroll = (e) => {
    console.log(e.target.scrollTop);
    console.log(e.target.scrollHeight);
    console.log(e.target.clientHeight);
    setPaddingBottom(
      e.target.scrollHeight - e.target.scrollTop * 2 - e.target.clientHeight
    );
  };

  React.useEffect(() => {
    if (user || user_data) {
      getCurrentUserData(user.uid).then((u) => {
        console.log("User Data", u);
        setUserData(u);
      });
    }
  }, [user]);

  React.useEffect(() => {
    if (user) {
      setMounted(true);
      getMyChats(user.uid).then((messages) => {
        console.log(messages);
        setChats(messages);
      });
    }
  }, [user]);

  const handleCurrentChat = (chat, current_user, current_chats) => {
    setChat(chat);
    setCurrentChatUser(current_user);
    setCurrentChats(current_chats);
    console.log(chat, current_user, current_chats);
  };
  console.log("Chat=>", chat);

  return (
    <div>
      <Head>
        <title>InstaNext | Direct</title>
        <meta
          name="description"
          content="Generated by create next app & firebase"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar
        setLogout={setLogout}
        user={mounted ? user_data : null}
        setNewPost={setNewPost}
        mounted={mounted}
      />

      <div className={styles.direct__body}>
        <div className={styles.direct__body_container}>
          <div className={styles.chats_container}>
            <div className={styles.chat_header}>
              <div className={styles.chat_header_container}>
                <div className={styles.blank_box}></div>
                <div className={styles.chat_author}>
                  <div className={styles.chat_author_container}>
                    <button>
                      {user_data && user_data.name}
                      <span>
                        <svg
                          aria-label="Down Chevron Icon"
                          className="_8-yf5 "
                          color="#262626"
                          fill="#262626"
                          height="20"
                          role="img"
                          viewBox="0 0 24 24"
                          width="20"
                        >
                          <path d="M21 17.502a.997.997 0 01-.707-.293L12 8.913l-8.293 8.296a1 1 0 11-1.414-1.414l9-9.004a1.03 1.03 0 011.414 0l9 9.004A1 1 0 0121 17.502z"></path>
                        </svg>
                      </span>
                    </button>
                  </div>
                </div>
                <button className={styles.new_chat_btn}>
                  <HiOutlinePencilAlt />
                </button>
              </div>
            </div>
            <div
              className={styles.chats_wrapper}
              onScroll={handleScroll}
              style={{
                paddingBottom: paddingBottom,
              }}
            >
              {chats &&
                chats.map((chat, index) => {
                  console.log("ind chat", chat);
                  return (
                    <ChatItem key={index} chat={chat} uid={user && user.uid} />
                  );
                })}
            </div>
          </div>
          <div className={styles.chat_body}>
            <div className={styles.chat_body_empty}>
              <div className={styles.empty_chat_icon}>
                <svg
                  aria-label="Direct"
                  className="_8-yf5 "
                  color="#262626"
                  fill="#262626"
                  height="96"
                  role="img"
                  viewBox="0 0 96 96"
                  width="96"
                >
                  <circle
                    cx="48"
                    cy="48"
                    fill="none"
                    r="47"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth="2"
                  ></circle>
                  <line
                    fill="none"
                    stroke="currentColor"
                    strokeLinejoin="round"
                    strokeWidth="2"
                    x1="69.286"
                    x2="41.447"
                    y1="33.21"
                    y2="48.804"
                  ></line>
                  <polygon
                    fill="none"
                    points="47.254 73.123 71.376 31.998 24.546 32.002 41.448 48.805 47.254 73.123"
                    stroke="currentColor"
                    strokeLinejoin="round"
                    strokeWidth="2"
                  ></polygon>
                </svg>
              </div>
              <div className={styles.empty_chat_title}>
                <h3>Your messages</h3>
              </div>
              <div className={styles.empty_chat_subtitle}>
                <h6>Send private photos and messages to a friend or group.</h6>
              </div>
              <button className={styles.new_chat_btn_secondary}>
                <span>Send message</span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Direct;

import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import React from "react";
import LogoutModal from "../components/LogoutModal/LogoutModal";
import Navbar from "../components/Navbar/Navbar";
import Post from "../components/Post/Post";
import StorySection from "../components/StorySection/StorySection";
import styles from "../styles/Home.module.css";
import { getAuth, onAuthStateChanged } from "firebase/auth";
import {
  collection,
  query,
  where,
  onSnapshot,
  getFirestore,
} from "firebase/firestore";
import getCurrentUserData from "../utils/getUser";
import { useRouter } from "next/router";
const auth = getAuth();
const db = getFirestore();
export default function Home() {
  const [logout, setLogout] = React.useState(false);
  const [user, setUser] = React.useState(false);
  const [photos, setPhotos] = React.useState([]);

  const router = useRouter();
  React.useEffect(() => {
    onAuthStateChanged(auth, async (user) => {
      if (user) {
        // User is signed in, see docs for a list of available properties
        // https://firebase.google.com/docs/reference/js/firebase.User
        const uid = user.uid;
        console.log(user);
        const u = await getCurrentUserData(uid);
        setUser(u);
        // ...
      } else {
        // User is signed out
        // ...
        router.push("/accounts/login");
      }
    });
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  React.useEffect(() => {
    const photo_query = query(collection(db, "photos"));
    const unsub = onSnapshot(photo_query, (querySnapshot) => {
      const d = querySnapshot.docs.map((doc) => doc.data());
      console.log(d);
      setPhotos(d);
    });

    return () => unsub();
  }, []);

  console.log(user, photos);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar setLogout={setLogout} user={user} />

      <div className={`${styles.container}`}>
        <div className={`${styles.app_grid} block lg:grid`}>
          <div className={styles.app_body}>
            <div className="posts">
              {photos.map((photo, index) => {
                return (
                  <Post
                    key={index}
                    image={photo.image_path}
                    time={photo.date_created}
                    lat={photo.latitude}
                    long={photo.longitude}
                  />
                );
              })}
            </div>
          </div>
          <div className={`${styles.primary_secondary} hidden lg:block`}>
            {user && (
              <div className={styles.app_user_home_container}>
                <div className={`${styles.app_home_user_avatar}`}>
                  {user.avatar !== "null" ? (
                    <img src={user.avatar} alt="user" />
                  ) : (
                    <p>SK</p>
                  )}
                </div>
                <div className={styles.app_home_user_info}>
                  <Link href={`/u/${user.uid}`}>
                    <a>
                      <p className="font-semibold">{user.name}</p>
                    </a>
                  </Link>
                  <span className="text-gray-500">{user.username}</span>
                </div>
                <div className={styles.auth_switcher}>
                  <span className="text-sky-500 cursor-pointer">Switch</span>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
      {logout && <LogoutModal />}
    </div>
  );
}
